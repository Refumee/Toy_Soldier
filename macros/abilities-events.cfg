
[event]
   name=attack end
   first_time_only=no

   [filter_attack]
	   special_id=trample
   [/filter_attack]

		[store_locations]
			[not]
				[filter]
				[/filter]
			[/not]

			[filter_adjacent_location]
				x,y=$x2,$y2
				adjacent=-$unit.facing
			[/filter_adjacent_location]

			variable=trample_target_hex
		[/store_locations]

		[if]
			[variable]
				name=trample_target_hex.length
				greater_than=0
			[/variable]

			[then]
				[teleport]
					[filter]
						x,y=$x1,$y1
					[/filter]
					animate=no
					
					x,y=$trample_target_hex.x,$trample_target_hex.y
				   check_passability=yes
				   clear_shroud=yes
				[/teleport]
				[redraw]
				[/redraw]
			[/then]
		[/if]
				[if]
					[variable]
						name=second_unit.level
						equals=1
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]
								[effect]
									apply_to=experience
									increase=+1
								[/effect]
						[/modify_unit]
					[/then]
					[elseif]
						[variable]
							name=second_unit.level
							equals=2
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+2
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=3
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+3
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=4
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+4
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=5
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+5
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=6
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+6
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
				[/if]
		[if]
			[variable]
				name=second_unit.hitpoints
				less_than=1
			[/variable]
			[then]
				[if]
					[variable]
						name=second_unit.level
						equals=1
					[/variable]
					[then]
						[modify_unit]
							[filter]
								id=$unit.id
							[/filter]
								[effect]
									apply_to=experience
									increase=+8
								[/effect]
						[/modify_unit]
					[/then]
					[elseif]
						[variable]
							name=second_unit.level
							equals=0
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+4
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=2
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+16
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=3
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+24
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=4
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+32
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=5
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+40
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
					[elseif]
						[variable]
							name=second_unit.level
							equals=6
						[/variable]
						[then]
							[modify_unit]
								[filter]
									id=$unit.id
								[/filter]
									[effect]
										apply_to=experience
										increase=+48
									[/effect]
							[/modify_unit]
						[/then]
					[/elseif]
				[/if]
			[/then]
		[/if]

	[store_unit]
		[filter]
			id=$unit.id
		[/filter]
		kill=yes
		variable=trampler
	[/store_unit]

	[unstore_unit]
		variable=trampler
		advance=yes
		find_vacant=no
		x,y=$trampler.x,$trampler.y
	[/unstore_unit]
	
	{CLEAR_VARIABLE trample_direction,trample_target_hex}
[/event]

[event]
   name=attacker hits
   first_time_only=no

   [filter_attack]
	   special_id=knockback
   [/filter_attack]

   [filter_second]
	   [not]
			ability=steadfast
		   [filter_location]
			   terrain=*^V*
		   [/filter_location]
	   [/not]
   [/filter_second]

   [if]
	   [variable]
		   name=second_unit.hitpoints
		   greater_than=0
	   [/variable]
		
		[then]
		   [store_locations]
			   [not]
				   [filter]
				   [/filter]
			   [/not]

			   [filter_adjacent_location]
				   x,y=$x2,$y2
				   adjacent=-$unit.facing
			   [/filter_adjacent_location]

			   variable=knockback_target_hex
		   [/store_locations]

		   [if]
			   [variable]
				   name=knockback_target_hex.length
				   greater_than=0
			   [/variable]

			   [then]
					[if]
						[have_location]
							x,y=$knockback_target_hex.x,$knockback_target_hex.y
							terrain=!,Q*,Xu*,Xo*,Xv,*^Q*,*^X*
							[not]
								[filter]
								[/filter]
							[/not]
						[/have_location]
						[then]
							[sound]
								name=mace.ogg
							[/sound]
							
							[move_unit]
								x,y=$x2,$y2
								to_x,to_y=$knockback_target_hex.x,$knockback_target_hex.y
							   check_passability=no
							[/move_unit]
						[/then]
					   [else]
							[store_unit]
							   [filter]
								   x,y=$x2,$y2
							   [/filter]

							   kill=yes
							   variable=knockbacked
							[/store_unit]

							[unstore_unit]
							   variable=knockbacked
							   text= _ "slowed"
							   {COLOR_HARM}
							[/unstore_unit]
							[object]
								silent=yes
								duration=turn end

								[filter]
									x,y=$x2,$y2
								[/filter]

								[effect]
									apply_to=status
									add=slowed
								[/effect]
							[/object]
							[sound]
								name=slowed.wav
							[/sound]
							{CLEAR_VARIABLE knockbacked}
					   [/else]
					[/if]

				   [if]
					   [have_unit]
						   x,y=$knockback_target_hex.x,$knockback_target_hex.y
					   [/have_unit]

					   [then]
						   
							[store_unit]
							   [filter]
								   x,y=$knockback_target_hex.x,$knockback_target_hex.y
							   [/filter]

							   kill=yes
							   variable=knockbacked
						   [/store_unit]

						   [unstore_unit]
							   variable=knockbacked
							   text= _ "Knockback!"
							   {COLOR_HARM}
						   [/unstore_unit]

						   {CLEAR_VARIABLE knockbacked}
					   [/then]
				   [/if]
			   [/then]
			   [else]
					[store_unit]
					   [filter]
						   x,y=$x2,$y2
					   [/filter]

					   kill=yes
					   variable=knockbacked
					[/store_unit]

					[unstore_unit]
					   variable=knockbacked
					   text= _ "slowed"
					   {COLOR_HARM}
					[/unstore_unit]
					[object]
						silent=yes
						duration=turn end

						[filter]
							x,y=$x2,$y2
						[/filter]

						[effect]
							apply_to=status
							add=slowed
						[/effect]
					[/object]
					[sound]
						name=slowed.wav
					[/sound]
					{CLEAR_VARIABLE knockbacked}
			   [/else]
		   [/if]

		   {CLEAR_VARIABLE knockback_direction,knockback_target_hex}
	   [/then]
   [/if]
[/event]

[event]
	name=attacker_hits
	first_time_only=no

	[filter_attack]
		special_id=lowres_ethergrip
	[/filter_attack]

	[filter_second]
		[not]
			level=0
			[or]
				status=res_ethergrip
			[/or]
		[/not]
	[/filter_second]

	{VARIABLE second_unit.status.res_ethergrip yes}

	[unstore_unit]
		variable=second_unit
		find_vacant=no
		text= _ "ether grip"
		female_text= _ "female^ether grip"
		red,green,blue=175,65,155
	[/unstore_unit]

	[object]
		silent=yes
		duration=turn end

		[filter]
			x,y=$x2,$y2
		[/filter]

		[effect]
			apply_to=image_mod
			replace="BLEND(175,65,155,0.5)"
		[/effect]
		[effect]
			apply_to=image_mod
			add="O(60%)"
		[/effect]

		[effect]
			apply_to=resistance
			replace=no
			[resistance]
				fire=+20
				arcane=+20
				blade=+20
				impact=+20
				cold=+20
				pierce=+20
			[/resistance]
		[/effect]
	[/object]
[/event]

[event]
	name=side turn end
	first_time_only=no

	[store_unit]
		[filter]
			side=$side_number
			status=res_ethergrip
		[/filter]
		variable=res_ethergrip
	[/store_unit]

	{FOREACH res_ethergrip i}
		{CLEAR_VARIABLE res_ethergrip[$i].status.res_ethergrip}

		[unstore_unit]
			variable=res_ethergrip[$i]
		[/unstore_unit]
	{NEXT i}

	{CLEAR_VARIABLE res_ethergrip}
[/event]
